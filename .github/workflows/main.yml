name: Shodei CI/CD on Ubuntu

on:
  push:
    branches: 
      - main  # Trigger this action on a push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3  # This action checks out the repository

    - name: Test SSH Connection
      uses: appleboy/ssh-action@master
      with:
        host: "your-ec2-ip"  # Replace with your EC2 instance IP address
        username: "ubuntu"  # Replace with your EC2 username, usually 'ubuntu' for Ubuntu instances
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "SSH connection test successful"
    
    - name: Deploy Application to AWS EC2
      uses: appleboy/scp-action@master
      with:
        host: "your-ec2-ip"  # Replace with your EC2 instance IP address
        username: "ubuntu"  # EC2 username
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./"  # The local directory to copy (the root of your GitHub repo)
        target: "/mnt/data/var/www/html/script"  # The destination on the EC2 instance
        overwrite: true  # Overwrite existing files
        rm: true  # Remove destination files that aren't in the source

    - name: Copy .env File to Deployment Directory
      uses: appleboy/ssh-action@master
      with:
        host: "your-ec2-ip"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo cp /home/ubuntu/secret/shodei/.env /mnt/data/var/www/html/script/.env  # Copy your .env file

    - name: Set Correct Permissions
      uses: appleboy/ssh-action@master
      with:
        host: "your-ec2-ip"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo chown -R www-data:www-data /mnt/data/var/www/html/script/storage
          sudo chmod -R 775 /mnt/data/var/www/html/script/storage
          sudo chmod -R 775 /mnt/data/var/www/html/script/bootstrap/cache
          echo "Permissions set successfully!"
    
    - name: Install Dependencies and Restart Application
      uses: appleboy/ssh-action@master
      with:
        host: "your-ec2-ip"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /mnt/data/var/www/html/script/
          composer install --no-dev --optimize-autoloader  # Install dependencies
          php artisan migrate --force  # Run migrations
          php artisan config:cache  # Cache config
          php artisan route:cache  # Cache routes
          php artisan view:cache  # Cache views
          sudo systemctl restart nginx  # Restart Nginx to apply changes
          echo "Deployment complete!"
